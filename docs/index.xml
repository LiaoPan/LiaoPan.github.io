<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>主页 on 脑技术计划</title>
    <link>https://LiaoPan.github.io/</link>
    <description>Recent content in 主页 on 脑技术计划</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 05 Jan 2023 23:05:15 +0800</lastBuildDate><atom:link href="https://LiaoPan.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>快速入门</title>
      <link>https://LiaoPan.github.io/dipy/basic/</link>
      <pubDate>Tue, 10 Jan 2023 14:30:41 +0800</pubDate>
      
      <guid>https://LiaoPan.github.io/dipy/basic/</guid>
      <description>快速入门 本教程知识点：
导入和保存dMRI的NIfTI数据 绘制与查看dMRI影像数据 读取bval和bvec文件 Jupyter已省略部分内容，请点击这里全屏显示 </description>
    </item>
    
    <item>
      <title>FreeSurfer教程 #1. 安装</title>
      <link>https://LiaoPan.github.io/freesurfer/installation/</link>
      <pubDate>Sun, 08 Jan 2023 22:09:43 +0800</pubDate>
      
      <guid>https://LiaoPan.github.io/freesurfer/installation/</guid>
      <description>安装方法简述 根据自己系统下载对应的安装包（FreeSurfer 7.3.2 ~5G） 通过网址(https://surfer.nmr.mgh.harvard.edu/registration.html),获取license.txt,将其放置在FreeSufer的安装目录下。 依次执行下述脚本，设置环境变量,注意freesurfer的版本7.3.2需要替换成自己安装的版本。 shell $ export FREESURFER_HOME=/Applications/freesurfer/7.3.2 $ export SUBJECTS_DIR=$FREESURFER_HOME/subjects $ source $FREESURFER_HOME/SetUpFreeSurfer.sh -------- freesurfer-darwin-macOS-7.3.2-20200429-3a03ebd -------- Setting up environment for FreeSurfer/FS-FAST (and FSL) WARNING: /Users/synpro/freesurfer/fsfast does not exist FREESURFER_HOME /Applications/freesurfer/7.3.2 FSFAST_HOME /Users/synpro/freesurfer/fsfast FSF_OUTPUT_FORMAT nii.gz SUBJECTS_DIR /Applications/freesurfer/7.3.2/subjects MNI_DIR /Users/synpro/freesurfer/mni $ which freeview /Applications/freesurfer/7.3.2/bin/freeview 注意上述方式时临时有效，即仅对当前打开的终端有效，关闭该终端后，上述设置都会失效。
永久设置环境变量方法： 将上述脚本写入~/.bash_profile文件中,操作命令如下： shell $ vi ~/.bash_profile #打开该文本，写入内容(若不熟悉vim，请使用其他工具打开即可); # FREESURFER export FREESURFER_HOME=/Applications/freesurfer/7.3.2 export SUBJECTS_DIR=$FREESURFER_HOME/subjects source $FREESURFER_HOME/SetUpFreeSurfer.sh $ source .bash_profile # 让设置立即生效 需要注意的是，上面的设置默认使用bash，如果你在Mac上使用的是zsh等shell工具，需要再做如下配置，来达到环境变量设置的永久生效。
1.$ vim ~/.zshrc</description>
    </item>
    
    <item>
      <title>MRtrix3教程 #1 快速入门</title>
      <link>https://LiaoPan.github.io/mrtrix/basic/</link>
      <pubDate>Sat, 07 Jan 2023 01:44:51 +0800</pubDate>
      
      <guid>https://LiaoPan.github.io/mrtrix/basic/</guid>
      <description>相关知识点 基础概念 1. T1像与T2像 2. 白质的结构 3.扩散梯度（Diffusion Gradient）与B值（B-value） 4.B向量（B-vectors） 5.张量建模 6.其他的扩散衡量指标 7.扩散张量成像的缺点：交叉纤维问题 MRtrix Viewer使用 BTC_preop（Brain Tumor Connectomics Data）数据下载 MRtrix数据格式与格式转换 检查Bvals和Bvecs 学习参考 MRtrix是一个用于分析扩散数据的软件包。与张量拟合技术相比，MRtrix的一个显著优势是他们的约束球形解卷方法，或称CSD(Constrained spherical deconvolution)；该方法将每个体素的扩散信号解卷为一系列重叠的纤维束,这就减少了在拟合张量时可能出现的纤维交叉问题。
除了MRtrix团队创建的命令库之外，该软件封装了FSL的部分命令：特别是topup和eddy这两个命令。如果你还没有安装FSL软件，请下载并安装fMRI软件包FSL。
相关知识点 学习使用fixel-based分析方法来量化每个体素的白质纤维密度 学习怎么使用概率纤维束成像创建纤维束图 学习如何创建连接体(connectomes)以及如何可视化连接不同大脑区域的纤维数量 基础概念 1. T1像与T2像 在T1或解剖扫描中，白质比灰质浅，而灰质又比脑脊液浅；在T2或功能扫描中，相对强度被翻转。 典型的T1加权（解剖）和 T2加权（功能）图像。注意从T1加权成像到T2加权成像时组织类型的相对强度是如何反转的。
然而，还有其他类型的图像可以通过MRI扫描仪获得。在本节中，我们将重点讨论扩散加权核磁共振成像，或称dMRI，它测量大脑不同部位的相对扩散性&amp;ndash;特别是在白质束内。
2. 白质的结构 为什么dMRI会关注白质束？想象一下剥开一根奶酪条，然后想象一下剥开大脑&amp;ndash;就像奶酪条一样，大脑有首选的撕裂方向。这些方向与底层白质束相对应，白质束是厚厚的有髓神经元束（myelinated neurons），连接着大脑的附近和遥远的部分。例如，下纵束(inferior longitudinal fasciculus)连接大脑的视觉和颞部区域，而钩束(uncinate fasciculus)则连接大脑的颞部和下额部。这些神经束沿着大脑的所有三个维度行进，它们可能相互平行或相互交叉。
Illustration of several main white matter tracts. Figure taken from Thiebaut et al., 2015. 大脑的白质因其颜色而得名；这些神经元是高度髓鞘化的，这意味着它们有一层厚厚的脂质涂层，既能使它们绝缘，又有助于电脉冲的传输，就像绝缘的电线。相比之下，灰质神经元则相对没有髓鞘，这使得特定区域内的神经元密度更高。
如果对Diffusion的历史感兴趣，详情请查看
3.扩散梯度（Diffusion Gradient）与B值（B-value） 扩散梯度由以下参数生成：
The magnitude of diffusion gradient (G); The time between gradients (𝚫) ; T duration of diffusion gradient (𝜹).</description>
    </item>
    
    <item>
      <title>MRtrix3教程 #2 预处理</title>
      <link>https://LiaoPan.github.io/mrtrix/preprocessing/</link>
      <pubDate>Tue, 23 May 2023 11:05:36 +0800</pubDate>
      
      <guid>https://LiaoPan.github.io/mrtrix/preprocessing/</guid>
      <description>简介 dwi_denoise命令使用 mrcalc命令使用 mri_degibbs命令使用 提取反相编码图像(dwiextract、mrcat、mrmath) 将它们放在一起：使用dwipreproc进行预处理(Eddy处理，去除涡流) 检查损坏的切片 生成Mask(dwibiascorrect、dwi2mask) 参考资料 简介 就像其他神经影像学数据一样，扩散数据在分析前应进行预处理。预处理可以去除图像中的噪声源，如运动伪影和其他失真。扩散数据尤其容易受到相位编码方向的影响而产生扭曲的伪影： 一般来说，主要的编码方向&amp;ndash;如前向后(Anterior to Posterior, AP)&amp;ndash;会使大脑的前部看起来更 &amp;ldquo;压扁&amp;rdquo;，就像从前部方向吹来的强风。后至前(Posterior to Anterior,PA)，相位编码方向的情况则相反。有时这些扭曲是非常微妙的，但其他时候它们是明显的。 以下是使用 MRtrix 完成的常见预处理步骤:
dwi_denoise命令使用 我们要做的第一个预处理步骤是通过使用MRtrix的dwidenoise命令对数据进行去噪。这需要一个输入和一个输出参数，你也可以选择用-noise选项来输出噪声图。比如说：
# 查看使用说明 $ dwidenoise -h MRtrix 3.0.4 dwidenoise Dec 14 2022 dwidenoise: part of the MRtrix3 package SYNOPSIS dMRI noise level estimation and denoising using Marchenko-Pastur PCA USAGE dwidenoise [ options ] dwi out dwi the input diffusion-weighted image. out the output denoised DWI image. ...... # 运行此命令需要几分钟时间。 $ dwidenoise sub-CON02_ses-preop_acq-AP_dwi.</description>
    </item>
    
    <item>
      <title>纤维束追踪入门</title>
      <link>https://LiaoPan.github.io/dipy/tracking_basic/</link>
      <pubDate>Thu, 12 Jan 2023 16:20:45 +0800</pubDate>
      
      <guid>https://LiaoPan.github.io/dipy/tracking_basic/</guid>
      <description>Basic Tracking(Local fiber tracking) 本教程知识点：
如何使用扩散像数据集来实现纤维束重建 1)从扩散数据集获取方向(directions)的方法。 2)识别追踪何时必须停止的方法。 3)设置追踪种子(seed)。 如何保存trk文件 使用StatefulTractogram()和save_trk()函数保存trk文件 局部纤维跟踪(Local fiber tracking)是一种通过从局部方向信息创建流线(streamlines)来模拟白质纤维的方法。其思想如下:如果一个区域/路径段的局部方向是已知的，可以沿着这些方向进行集成，以构建该结构的完整表示。局部纤维束追踪因其简单、鲁棒性好而被广泛应用于扩散MRI领域。
步骤一. 从扩散数据集获取方向(directions)的方法
基于 Constant Solid Angle ODF模型来拟合数据，该模型会评估每个voxel的取向分布函数(ODF,Orientation Distribution Function)。OODF 是作为方向函数的水扩散分布。ODF的峰值是图像中某一点上束段(tract segments)方向的良好估计。在这里，我们使用peaks_from_model来拟合数据，并计算白质所有体素中的纤维方向。
步骤二. 识别追踪何时必须停止的方法
接下来，我们需要用某种方法将纤维追踪限制在具有良好方向性信息的区域。我们已经创建了白质掩码(white mask)，但我们可以更进一步，通过对广义分数各向异性（GFA,generalized fractional anisotropy）进行阈值处理，将纤维追踪限制在那些ODF显示出明显限制性扩散的区域。
步骤三. 设置追踪种子(seed)
在我们开始追踪之前，我们需要指定在哪里 &amp;ldquo;seed&amp;rdquo;（开始）纤维追踪。一般来说，选择的种子将取决于人们感兴趣的建模路径。在这个例子中，我们将在胼胝体的矢状切面上使用一个每个体素的2x2x2的网格种子。从这个区域进行追踪将给我们一个胼胝体束的模型。这个切片在标签的图像中具有标签值2。
使用EuDX算法构建一个确定性的纤维束流线(streamlines)。 所谓的确定性(deterministic)表示如果你重复纤维跟踪（保持所有输入相同），你将得到完全相同的一组纤维束流线。
Jupyter已省略部分内容，请点击这里全屏显示 使用csdeconv.mask_for_response_ssst()函数来获取每个体素的各向异性配置（very anisotropic configurations）的信息，该函数会返回所选体素的mask。 通过这个mask，我们就可以通过csdeconv.response_from_mask_ssst()函数计算响应函数。
load_nifti_data()和load_nifti()函数的区别:
load_nifti_data()只加载nifti内的data array。
load_nifti()除了加载data array,还要把其他信息也加载进来（data, img.affine, img, vox_size, nib.aff2axcodes(img.affine)）。
方向场（Direction Field）图如何看？
x - Red - 方向场图中为红色标识
y - Green - 方向场图中为绿色标识
z - Blue- 方向场图中为蓝色标识</description>
    </item>
    
    <item>
      <title>FreeSurfer教程 #2. FreeSurfer输出结果与FreeView可视化</title>
      <link>https://LiaoPan.github.io/freesurfer/basic/</link>
      <pubDate>Sun, 08 Jan 2023 21:19:31 +0800</pubDate>
      
      <guid>https://LiaoPan.github.io/freesurfer/basic/</guid>
      <description>0. 本文知识点汇总 1. 教程数据准备 FreeSurfer 的输出结果 使用FreeView来图片查看Volumes 使用FreeView来3D查看Surfaces 参考资料 0. 本文知识点汇总 FreeSurfer输出结果的简单理解 使用FreeView对FreeSurfer的结果（Volumes、Surfaces）进行可视化查看 1. 教程数据准备 在FsTutorial_Data下载相关教程的测试数据，大概8GB。
使用命令行下载相关教程数据，也可以直接访问网址下载，然后解压。
curl https://surfer.nmr.mgh.harvard.edu/pub/data/tutorial_data.tar.gz -o tutorial_data.tar.gz tar -xzvf tutorial_data.tar.gz rm tutorial_data.tar.gz export TUTORIAL_DATA=/path/to/your/tutorial/dir # 定义环境变量TUTORIAL_DATA ls $TUTORIAL_DATA buckner_data fsfast-functional diffusion_recons fsfast-tutorial.subjects diffusion_tutorial long-tutorial FreeSurfer 的输出结果 surf 文件夹下生成 . white、. sphere、. inflated 等网格点文件，每一个文件里面都存储了大脑皮质表面网格点的三维坐标及相邻顶点构成的三角面片信息。
surf 文件夹下生成基于曲面的形态特征数据，不同的特征采用不同的文件后缀名，
皮质厚度（ . thickness ） 雅可比度量（. jacobian. white） 脑沟（ . sulc ） 曲率（. curv） 外表面积（. area） 体积（. volume）等面数据文件，其坐标索引号与 Mesh 网格序号一致。 **stats **文件夹下，对于每个脑图谱(atlas)都有一个分区结果(parcellations)。比如，</description>
    </item>
    
    <item>
      <title>FreeSurfer教程 #N. 实践教程之CookBook</title>
      <link>https://LiaoPan.github.io/freesurfer/practice/</link>
      <pubDate>Fri, 03 Feb 2023 10:44:45 +0800</pubDate>
      
      <guid>https://LiaoPan.github.io/freesurfer/practice/</guid>
      <description>实践#1:如何将一个个体subject映射到fsaverage？ 实践2:如何提取stats文件夹内的统计信息？ 实践#3:如何提取感兴趣ROI区域的结构信息？ 实践#4:如果构建一个surface ROI重采样到体积（Volume）？ 实践#5:如何使用FreeSurfer去除颅骨(skull-stripping)? 实践#1:如何将一个个体subject映射到fsaverage？ 如何按自定义模板，重建皮层，并提取皮层信息？
实践2:如何提取stats文件夹内的统计信息？ 方法: 使用asegstats2table和aparcstats2table命令来提取 $ asegstats2table --subject &amp;lt;&amp;gt; --common-segs --meas &amp;lt;volume,mean,std&amp;gt; --stats=&amp;lt;stats file&amp;gt; --table=&amp;lt;extracted measurement to a text file&amp;gt; $ asegstats2table --subjects sub-101 sub-103 --common-segs --meas volume --stats=aseg.stats --table=segstats.txt --subjects选项指定了一个被试名称的列表。 --common-segs表示输出所有被试共有的分段，换句话说，如果一个受试者的分段数与其他受试者不同，不要以错误退出命令。 --meas表示要从表中提取哪种结构测量值（&amp;ldquo;volume &amp;ldquo;是默认值；替代值是 &amp;ldquo;mean &amp;ldquo;和 &amp;ldquo;std&amp;rdquo;）。 --stats指的是将从分段数据中提取的统计文件； --table将提取的测量数据写入一个文本文件，按被试名称组织。
同理，aparcstats2table也类似，
$ aparcstats2table --subjects sub-101 sub-103 --hemi lh --meas thickness --parc=aparc --tablefile=aparc.txt --hemi,指定要分析的半球 --meas,要提取的测量值,选项有&amp;quot;thickness&amp;rdquo;, &amp;ldquo;volume&amp;rdquo;, &amp;ldquo;area&amp;rdquo;, &amp;ldquo;meancurv&amp;rdquo; --parc,指定图谱，选项有Desikan-Killinay图谱(&amp;ldquo;aparc&amp;rdquo;)和Destrieux图谱(&amp;ldquo;aparc.a2009s&amp;rdquo;)
实践#3:如何提取感兴趣ROI区域的结构信息？ 如何将一个Volumetric ROI重采样到表面，然后从该ROI中提取结构测量值。 如何将ROI区域映射到皮层上 shell #!/bin/tcsh setenv SUBJECTS_DIR `pwd` # 使用AFNI的3dUndump创建5mm的ROI球体;ROI_file.</description>
    </item>
    
  </channel>
</rss>
